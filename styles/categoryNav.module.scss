@import "globals.scss";
.categoryNav {
  // background: #fff;
}

.categoriesList {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 2rem;
}

.categoryLink {
  color: $grayText;
  letter-spacing: 1px;
  padding: 1rem 2rem;
  background-color: transparent;
  transition: all 0.2s ease-in-out;
  &:hover {
    font-weight: 700;
    &:nth-of-type(2) {
      background-color: rgba(255, 255, 3, 0.494);
    }
    &:nth-of-type(3) {
      background-color: rgba(255, 0, 0, 0.377);
    }
    &:nth-of-type(4) {
      background-color: rgba(0, 0, 255, 0.448);
    }
    &:nth-of-type(5) {
      background-color: rgba(0, 128, 0, 0.402);
    }
    &:nth-of-type(6) {
      background-color: rgba(238, 130, 238, 0.488);
    }
  }

  &.active {
  }
}
.filtersTitle,
.firstCategory {
  margin: 0 0 1rem 0.5rem;
  padding: 1rem 1.5rem;
  font-family: "nautigal", sans-serif;
  font-weight: 700;
  font-size: 3.5rem;
  letter-spacing: 2px;
  border-bottom: 2px solid $theme;
  width: 70%;
}

.filters {
  border-top: 1px solid #eee;
  padding-top: 1rem;
}

.filterSection {
  padding: 0.5rem 0;
  background-color: transparent;
  transition: all 0.2s ease-in-out;
  &:hover {
    font-weight: 700;
    &:nth-of-type(1) {
      background-color: rgba(0, 0, 255, 0.448);
    }
    &:nth-of-type(2) {
      background-color: rgba(255, 0, 0, 0.377);
    }
    &:nth-of-type(3) {
      background-color: rgba(0, 128, 0, 0.402);
    }
  }

  &:active {
    background-color: transparent !important;
  }

  &[open] {
    background-color: transparent !important;
  }

  &:last-child {
    margin-bottom: 0;
  }
}

.filtersTitle {
  padding-left: 1.5rem;
}

.sectionTitle {
  font-weight: 500;
  padding: 0.75rem 1rem 0.75rem 0;
  margin: 0 2rem;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  user-select: none;

  &::after {
    content: "";
    width: 0.5rem;
    height: 0.5rem;
    border-right: 2px solid currentColor;
    border-bottom: 2px solid currentColor;
    transform: rotate(45deg);
    transition: transform 0.2s;
  }

  &[open] {
    &::after {
      transform: rotate(-135deg);
    }
  }
}

.filterContent {
  padding: 0.5rem 0 0.5rem 0.5rem;
  margin-left: 2rem;
}

.filterOption {
  display: flex;
  align-items: center;
  padding: 0.375rem 0;
  cursor: pointer;

  input {
    margin-right: 0.75rem;
  }

  span {
    color: #666;
    font-size: 0.9rem;
  }

  &:hover span {
    color: #000;
  }

  &:nth-of-type(1),
  &.anyOption {
    margin-bottom: 0.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #eee;

    span {
      font-weight: 500;
      color: #333;
    }
  }

  // Hide default radio button
  input[type="radio"] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  // Custom radio button container
  .radioControl {
    position: relative;
    display: inline-block;
    width: 18px;
    height: 18px;
    margin-right: 0.8rem;
    border: 2px solid $theme;
    border-radius: 50%;
    transition: all 0.2s ease;

    // Inner circle that grows
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background-color: $theme;
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275); // Bouncy effect
    }
  }

  // When radio is checked
  input[type="radio"]:checked + .radioControl {
    &::after {
      width: 10px;
      height: 10px;
    }
  }

  // Focus styles for accessibility
  input[type="radio"]:focus + .radioControl {
    box-shadow: 0 0 0 3px rgba($theme, 0.2);
  }

  // Hover state
  &:hover .radioControl {
    border-color: darken($theme, 10%);

    &::after {
      background-color: darken($theme, 10%);
    }
  }

  // Text label
  span {
    margin-left: 0.2rem;
  }
}

.loading {
  padding: 2rem;
  text-align: center;
  color: #666;
}
